{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForm","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","showAlert","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","n","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03d00237.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'Set title here',\r\n    aboutText:'About'\r\n}\r\n\r\nexport default Navbar;\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLowClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        // var text=document.getElementById(\"myBox\");\r\n        // text.select();\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed extra spaces\",\"success\");\r\n    }\r\n\r\n    const [text,setText]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'rgb(20 59 66)':'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(/\\s+/)\r\n            .filter(function(n) { return n !== '' })\r\n            .length} words and {text.length} characters</p>\r\n            <p>Reading Time : {0.008*text.split(/\\s+/)\r\n            .filter(function(n) { return n !== '' })\r\n            .length} minutes</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#1e4448';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      // document.title=\"TextUtils - Dark Mode\"\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      // document.title=\"TextUtils - Light Mode\"\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />    \n          {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}